@import "lib/bootstrap/css/bootstrap.css";
:root {
  --umb-block-grid--column-gap: 60px;
  --umb-block-grid--row-gap: 60px;
}
p {
  font-size: 16px;
  line-height: 1.5;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1.3;
}
.umb-block-grid__layout-container {
  position: relative;
  display: grid;
  grid-template-columns: repeat(var(--umb-block-grid--grid-columns, 1), minmax(0, 1fr));
  grid-auto-flow: row;
  grid-auto-rows: minmax(50px, -webkit-min-content);
  grid-auto-rows: minmax(50px, min-content);
  -moz-column-gap: var(--umb-block-grid--column-gap, 0);
  column-gap: var(--umb-block-grid--column-gap, 0);
  row-gap: var(--umb-block-grid--row-gap, 0);
}
.umb-block-grid__layout-item {
  position: relative;
  /* For small devices we scale columnSpan by three, to make everything bigger than 1/3 take full width: */
  grid-column-end: span min(calc(var(--umb-block-grid--item-column-span, 1) * 3), var(--umb-block-grid--grid-columns));
  grid-row: span var(--umb-block-grid--item-row-span, 1);
}
.umb-block-grid__area-container,
.umb-block-grid__block--view::part(area-container) {
  position: relative;
  display: grid;
  grid-template-columns: repeat(var(--umb-block-grid--area-grid-columns, var(--umb-block-grid--grid-columns, 1)), minmax(0, 1fr));
  grid-auto-flow: row;
  grid-auto-rows: minmax(50px, -webkit-min-content);
  grid-auto-rows: minmax(50px, min-content);
  -moz-column-gap: var(--umb-block-grid--areas-column-gap, 60px);
  column-gap: var(--umb-block-grid--areas-column-gap, 60px);
  row-gap: var(--umb-block-grid--areas-row-gap, 60px);
}
.umb-block-grid__area {
  position: relative;
  height: 100%;
  display: flex;
  flex-direction: column;
  /* For small devices we scale columnSpan by three, to make everything bigger than 1/3 take full width: */
  grid-column-end: span min(calc(var(--umb-block-grid--area-column-span, 1) * 3), var(--umb-block-grid--area-grid-columns));
  grid-row: span var(--umb-block-grid--area-row-span, 1);
}
@media (min-width: 1024px) {
  .umb-block-grid__layout-item {
    grid-column-end: span min(var(--umb-block-grid--item-column-span, 1), var(--umb-block-grid--grid-columns));
  }
  .umb-block-grid__area {
    grid-column-end: span min(var(--umb-block-grid--area-column-span, 1), var(--umb-block-grid--area-grid-columns));
  }
}
.umb-block-grid__area {
  justify-content: center;
}
.section-image {
  max-width: 100%;
  height: auto;
}
.section-block {
  color: var(--section-block-color, #000);
  background: var(--section-block-background, transparent);
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  --section-block-color: #000;
  --section-block-background: transparent;
}
.section-block--small {
  padding-top: 1rem;
  padding-bottom: 1rem;
}
.section-block--medium {
  padding-top: 2rem;
  padding-bottom: 2rem;
}
.section-block--large {
  padding-top: 4rem;
  padding-bottom: 4rem;
}
@media screen and (min-width: 768px) {
  .section-block--small {
    padding-top: 3rem;
    padding-bottom: 3rem;
  }
  .section-block--medium {
    padding-top: 4rem;
    padding-bottom: 4rem;
  }
  .section-block--large {
    padding-top: 6rem;
    padding-bottom: 6rem;
  }
}